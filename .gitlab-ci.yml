stages:
  - build
  - test
  - quality

cache:
  paths:
    - .m2/repository
  key: "$CI_JOB_NAME"

build_job:
  stage: build
  before_script: 
    - . course_feeling/setup-mvn-proxy.sh
  script:
    - cd course_feeling
    - mvn compile 
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
    
  image: maven:3.6.1-jdk-11

test_job:
  stage: test
  before_script: 
    - . course_feeling/setup-mvn-proxy.sh
  script: 
    - cd course_feeling
    - mvn test
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  image: maven:3.6.1-jdk-11
  
code_quality_job:
  stage: quality
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  before_script: 
    - . course_feeling/setup-mvn-proxy.sh
  script:
    - mkdir codequality-results
    - docker run --help
    - docker run
        #--env CODECLIMATE_CODE="$PWD"
        #--volume "$PWD":/code
        #--volume /var/run/docker.sock:/var/run/docker.sock
        #--volume /tmp/cc:/tmp/cc
        #codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
  artifacts:
    paths:
      - codequality-results/ 

    

